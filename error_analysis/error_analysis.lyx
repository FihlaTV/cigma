#LyX 1.5.5 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass book
\begin_preamble
\newcommand{\mynote}[1]{}
\end_preamble
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
mynote{
\end_layout

\begin_layout Standard

Purpose of this chapter is to provide a high-level description of cigma,
 and just reference later chapters if we need to.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

In reference to error analysis, we introduce the topics in the following
 order
\end_layout

\begin_layout Standard

  - Quick reference to distance measures, both pointwise and global L2
\end_layout

\begin_layout Standard

  - Define function as used in cigma
\end_layout

\begin_layout Standard

  - Define integration rule in this chapter
\end_layout

\begin_layout Standard

    * in general (1D, 2D, 3D)
\end_layout

\begin_layout Standard

    * as applied to a discretization (sum over cells)
\end_layout

\begin_layout Standard

    * generating own integration points (XXX: moved to integration.lyx) --
 give references
\end_layout

\begin_layout Standard

      (give warning about using a different reference element -- weights,
 not just points, need to be adjusted -- perhaps this warning belongs in
 the next chapter)
\end_layout

\begin_layout Standard

  - Mention the interpolation functions that are available (XXX: moved to
 interpolation.lyx)
\end_layout

\begin_layout Standard

    * global functions (predefined: zero, scalar.one, ...)
\end_layout

\begin_layout Standard

    * FEM on a given discretization (local interpolations on tet4, hex8,
 tri3, quad3, ...
 elements)
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

Other tasks:
\end_layout

\begin_layout Standard

  Change name of chapter to something else (no longer necessary)
\end_layout

\begin_layout Standard

  Give formula in the last section
\end_layout

\begin_layout Standard

  Move discussion of convergence order from examples.lyx and merge it at
 the end of this chapter
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\begin_inset LatexCommand label
name "cha:Error-Analysis"

\end_inset

Error Analysis
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
Here, discuss motivation and goals.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
When solving differential equations representing physical systems of interest,
 we are often able to obtain a family of solutions by applying a variety
 of solution techniques.
 Sometimes an analytic method can be found, but most of the time we end
 up resorting to a numerical algorithm, such as the finite element method.
 Assessing the quality of these solutions is an important task, so we would
 like to develop a quantitative measure for indicating just how close our
 solutions approach the exact answer.
\end_layout

\begin_layout Standard
The simplest possible quantitative measure of the difference between two
 distinct functions consists of taking the pointwise difference at a common
 set of points.
 While no finite sample of points can perfectly represent a continuum of
 values, valuable information can be inferred from the statistics of the
 resulting set of differences.
 However, the functions we want to compare may not be defined at a common
 set of points.
 Unless we are able to interpolate the two functions on an intermediate
 set of points, this simple pointwise measure becomes inapplicable.
\end_layout

\begin_layout Standard
A very useful distance measure we can use is the 
\begin_inset Formula $L_{2}$
\end_inset

 norm, defined by the following integral
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{equation}
\varepsilon=||u-v||_{L_{2}}=\sqrt{\int_{\Omega}||u(\vec{x})-v(\vec{x})||^{2}d\vec{x}}\end{equation}

\end_inset

where 
\begin_inset Formula $u$
\end_inset

 and 
\begin_inset Formula $v$
\end_inset

 are the two functions defined on a global coordinate system.
 This gives us a single global estimate 
\begin_inset Formula $\varepsilon$
\end_inset

 representing the distance between the two functions 
\begin_inset Formula $u(\vec{x})$
\end_inset

 and 
\begin_inset Formula $v(\vec{x})$
\end_inset

.
 Alternatively, you may think of this as the size, or norm, of the 
\series bold
\emph on
residual field
\series default
\emph default
 
\begin_inset Formula $\rho(\vec{x})=u(\vec{x})-v(\vec{x})$
\end_inset

.
 This measure is useful because it is well known that solutions obtained
 with the finite element method converge only in a weak sense, as an average
 over a geometric region.
 In the rest of this chapter we will discuss the details involved in evaluating
 the above integral.
\end_layout

\begin_layout Standard
Another quantitative measure, which we won't discuss in this version of
 Cigma, is the energy norm.
 This norm is typically employed in 
\emph on
a posteriori
\emph default
 error analysis and is problem dependent.
 In general, the residual field used under this norm is defined in terms
 of the linearized equation from which the solution was obtained.
 Yet another interesting possibility would be to 
\end_layout

\begin_layout Section
Functions
\end_layout

\begin_layout Standard
The functions that we discuss in this manual are assumed to be defined in
 a common region of space denoted by 
\begin_inset Formula $\Omega$
\end_inset

.
 Elements of 
\begin_inset Formula $\Omega$
\end_inset

 are written as 
\begin_inset Formula $\vec{x}$
\end_inset

, and the number of components in the corresponding value of 
\begin_inset Formula $f(\vec{x})$
\end_inset

, is said to be the 
\series bold
\emph on
rank
\series default
\emph default
 of the function 
\begin_inset Formula $f$
\end_inset

.
 Thus, 
\emph on
scalar functions
\emph default
 have a rank of 1, 
\emph on
vector functions
\emph default
 would have a rank of 2 or 3, and 
\emph on
tensor functions
\emph default
 would have a rank of 6 or 9.
\end_layout

\begin_layout Section
Integral Approximations
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Standard
Briefer discussion here.
 Move this to Chapter 5.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In order to evaluate the integral for our 
\begin_inset Formula $L_{2}$
\end_inset

 norm, we will need to define an integration mesh which partitions the common
 domain 
\begin_inset Formula $\Omega$
\end_inset

 on which our two functions are defined.
 We can then use a numerical approximation, or 
\series bold
\emph on
integration rule
\series default
\emph default
, on each of the discrete cell elements 
\begin_inset Formula $\Omega_{i}$
\end_inset

 of our partition.
 Each of these cell integrals of the continuous residual norm 
\begin_inset Formula $||\rho(\vec{x})||^{2}$
\end_inset

 can then be replaced by a weighed sum evaluated at a finite set of points.
 This integral will be valid up to a certain accuracy.
 In Chapter 5, we discuss in more detail how choose the location and values
 for the integration points and weights which give optimal accuracy.
\end_layout

\begin_layout Standard
Thus, in general, an integration rule with 
\begin_inset Formula $Q$
\end_inset

 points and weights that allows us to integrate the scalar function 
\begin_inset Formula $F(\vec{x})$
\end_inset

 is given by the equation
\begin_inset Formula \begin{equation}
\int_{\Omega_{i}}\ F(\vec{x})\ d\vec{x}\approx\sum_{q=1}^{Q}F(\vec{X_{q}})W_{q}\end{equation}

\end_inset

where the integration points 
\begin_inset Formula $\vec{X}_{q}$
\end_inset

 and integration weights 
\begin_inset Formula $W_{q}$
\end_inset

 depend on the integration region 
\begin_inset Formula $\Omega_{i}$
\end_inset

.
 As we will see in Chapter 7, one possibility is to pre-calculate these
 points and weights explicitly on a specific discretization.
 Thus, as discussed in more detail in Chapters 4 and 5, we will generally
 want to define a reference cell 
\begin_inset Formula $\hat{\Omega}$
\end_inset

 which acts as a template for cells with the same geometric shape.
 We can achieve this by defining a 
\series bold
\emph on
reference map
\series default
\emph default
 
\begin_inset Formula $\chi_{i}:\hat{\Omega}\to\Omega_{i}$
\end_inset

 that describes how points in a specific cell 
\begin_inset Formula $\Omega_{i}$
\end_inset

 originate from the reference cell 
\begin_inset Formula $\hat{\Omega}$
\end_inset

.
 In this sense, the reference cell 
\begin_inset Formula $\hat{\Omega}$
\end_inset

 is said to define a 
\series bold
\emph on
local coordinate system
\series default
\emph default
 for the 
\begin_inset Formula $i$
\end_inset

-th cell 
\begin_inset Formula $\Omega_{i}.$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Standard
FIGURE refmap.png: 
\backslash
chi_i: 
\backslash
hat{
\backslash
Omega} 
\backslash
to 
\backslash
Omega_i
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note that a given discretization may contain cells of different shapes,
 which would require us to define an appropriate number of reference cells
 for each type of cell.
 However, for the purposes of this manual we may restrict the discussions
 in this manuals, without any loss of generality, to discretizations consisting
 of a single geometric shape.
 (XXX: reword this last sentence)
\end_layout

\begin_layout Standard
The advantage of this approach is readily apparent when one realizes that
 the integration points and weights can be calculated once and for all on
 the reference cell, and then reused for the other cells through the application
 of the corresponding reference map.
 In other words,
\begin_inset Formula \begin{eqnarray*}
\vec{X}_{q} & = & \chi_{i}(\vec{\xi}_{q})\\
W_{q} & = & w_{q}J_{i}(\vec{\xi}_{q})\end{eqnarray*}

\end_inset

where 
\begin_inset Formula $\vec{\xi}_{q}$
\end_inset

 and 
\begin_inset Formula $w_{q}$
\end_inset

 are the optimal integration points and weights for the integration rule
 defined on the reference domain 
\begin_inset Formula $\hat{\Omega}$
\end_inset

.
 Here, the factor 
\begin_inset Formula $J_{i}(\vec{\xi})=\det\ \left|\frac{d\chi_{i}}{d\vec{\xi}}\right|$
\end_inset

 is the Jacobian determinant of the transformation 
\begin_inset Formula $\chi_{i}$
\end_inset

.
 Recall that the index 
\begin_inset Formula $i$
\end_inset

 corresponds to the 
\begin_inset Formula $i$
\end_inset

-th cell 
\begin_inset Formula $\Omega_{i}$
\end_inset

, and the index 
\begin_inset Formula $q$
\end_inset

 ranges over the usual 
\begin_inset Formula $q=1,\ldots,Q$
\end_inset

.
\end_layout

\begin_layout Section
Interpolation Functions
\end_layout

\begin_layout Standard
Our two functions 
\begin_inset Formula $u(\vec{x})$
\end_inset

 and 
\begin_inset Formula $v(\vec{x})$
\end_inset

 are given in terms of the point
\begin_inset Formula $\vec{x}\in\Omega$
\end_inset

, and are said to be defined on a 
\series bold
\emph on
global coordinate system
\series default
\emph default
.
 Based on our discussion in Section 3.1, we see that we only need to know
 the values of 
\begin_inset Formula $u$
\end_inset

 and 
\begin_inset Formula $v$
\end_inset

 at a finite set of global points in order to calculate an approximation
 to the 
\begin_inset Formula $L_{2}$
\end_inset

 norm of the residual field 
\begin_inset Formula $\rho=u-v$
\end_inset

.
\end_layout

\begin_layout Standard
Specifically, given a function 
\begin_inset Formula $f(\vec{x})$
\end_inset

 we must be able to calculate its values at exactly those integration points.
 If we know a formula or algorithm for 
\begin_inset Formula $f$
\end_inset

, then our task is easy.
 Alternatively, these values can be given explicitly as a finite list.
 In all other cases, we will need an interpolation scheme that allows us
 to calculate 
\begin_inset Formula $f$
\end_inset

 on any intermediate points.
 This ability is also important because we may want to increase the accuracy
 of our norm by using more integration points, and thus we will need to
 be able to evaluate our function 
\begin_inset Formula $f$
\end_inset

 at the new points.
\end_layout

\begin_layout Standard
In general, an interpolation scheme involves a set of known functions 
\begin_inset Formula $\phi_{j}(\vec{x})$
\end_inset

 that we can compute anywhere and a set of parameters 
\begin_inset Formula $c_{j}$
\end_inset

 that define how these known functions are combined.
 Usually, the relation between the parameters and the known functions is
 a linear combination, 
\begin_inset Formula \begin{equation}
f(\vec{x})=d_{1}\phi_{1}(\vec{x})+d_{2}\phi_{2}(\vec{x})+\cdots+d_{m}\phi_{m}(\vec{x})\end{equation}

\end_inset

where the parameters 
\begin_inset Formula $d_{j}$
\end_inset

, with 
\begin_inset Formula $j=1,\ldots,m$
\end_inset

, are also sometimes referred to as the 
\series bold
\emph on
degrees of freedom
\series default
\emph default
 of the function 
\begin_inset Formula $f$
\end_inset

.
 As described in Chapter 4, the functions 
\begin_inset Formula $\phi_{j}$
\end_inset

, also known as 
\series bold
\emph on
shape functions
\series default
\emph default
, must satisfy a number of conditions.
 Because the choice of shape functions affects how well the true solution
 is represented, the convergence of the numerical method used to obtain
 the solution, the optimal choice of shape functions is very problem dependent.
\end_layout

\begin_layout Standard
If we know the shape functions 
\begin_inset Formula $\phi_{j}$
\end_inset

 directly in terms of the global points 
\begin_inset Formula $\vec{x}\in\Omega$
\end_inset

, they are said to form a 
\series bold
\emph on
global interpolation scheme
\series default
\emph default
, and we may use Eq X directly to find the values of 
\begin_inset Formula $f(\vec{x})$
\end_inset

, and we may refer to the 
\begin_inset Formula $\phi_{j}$
\end_inset

as 
\emph on
global shape functions
\emph default
.
 Note that since we are working in the global coordinate system, we don't
 need the discretization of the domain 
\begin_inset Formula $\Omega$
\end_inset

.
 Examples of global shape functions include spherical harmonics, and ...
\end_layout

\begin_layout Standard
Perhaps a more typical case is when 
\begin_inset Formula $f(\vec{x})$
\end_inset

 is defined piecewise, on each discretization element 
\begin_inset Formula $\Omega_{i}$
\end_inset

.
 Because these cells partition the original domain by definition, a given
 point in our domain will be found in one and only one cell, which will
 have a local definition.
 That is, for a particular 
\begin_inset Formula $\vec{x}\in\Omega$
\end_inset

 we will be able to find a unique cell 
\begin_inset Formula $\Omega_{e}$
\end_inset

, for some index 
\begin_inset Formula $e$
\end_inset

.
 We can refer to this as a 
\series bold
\emph on
local interpolation scheme
\series default
\emph default
.
\end_layout

\begin_layout Standard
See Chapter 5, for more details on the specific interpolation schemes available
 in Cigma.
\end_layout

\begin_layout Section
Global Error Measure
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
Suppose the domain 
\begin_inset Formula $\Omega$
\end_inset

 into an appropriate set of cells 
\begin_inset Formula $\Omega_{1},\Omega_{2},\ldots,\Omega_{n_{el}}$
\end_inset

, we can compute the global error 
\begin_inset Formula $\varepsilon^{2}$
\end_inset

 as a sum over localized cell contributions, 
\begin_inset Formula $\varepsilon^{2}=\sum_{e}\varepsilon_{e}^{2}$
\end_inset

, where each cell residual 
\begin_inset Formula $\varepsilon_{e}^{2}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{eqnarray*}
\varepsilon_{e}^{2} & = & \int_{\Omega_{e}}||u(\vec{x})-v(\vec{x})||^{2}d\vec{x}\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
In general, we won't be able to integrate each cell residual 
\begin_inset Formula $\varepsilon_{e}^{2}$
\end_inset

 exactly since either of the functions 
\begin_inset Formula $u$
\end_inset

 and 
\begin_inset Formula $v$
\end_inset

 may have an incompatible representation relative to the finite element
 space on each domain 
\begin_inset Formula $\Omega_{e}$
\end_inset

.
 However, we can still calculate an approximation of each cell residual
 by applying an appropriate quadrature rule with a tolerable truncation
 error 
\begin_inset LatexCommand cite
key "Encyclopaedia of Cubature Formulas 2005"

\end_inset

.
 
\end_layout

\begin_layout Standard
To obtain an approximation to the integral of a function 
\begin_inset Formula $F(\vec{x})$
\end_inset

 over a cell 
\begin_inset Formula $\Omega_{e}$
\end_inset

, we simply apply the quadrature rule with weights 
\begin_inset Formula $w_{e,1},w_{e,2},\ldots,w_{e,n_{Q}}$
\end_inset

 and integration points 
\begin_inset Formula $\vec{x}_{e,1},\vec{x}_{e,2},\ldots,\vec{x}_{e,n_{Q}}$
\end_inset

 appropriate for the physical element 
\begin_inset Formula $\Omega_{e}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\int_{\Omega_{e}}\ F(\vec{x})\ d\vec{x}=\sum_{q=1}^{n_{Q}}w_{e,q}F(\vec{x}_{e,q})\]

\end_inset


\end_layout

\begin_layout Standard
Applying this quadrature rule directly over the entire physical domain 
\begin_inset Formula $\Omega=\cup\Omega_{e}$
\end_inset

 gives us 
\begin_inset Formula \[
\int_{\Omega}\ F(\vec{x})\ d\vec{x}=\sum_{e=1}^{n_{el}}\sum_{q=1}^{n_{Q}}w_{e,q}F(\vec{x}_{e,q})\]

\end_inset


\end_layout

\begin_layout Standard
For efficiency reasons, it is undesirable in finite element applications
 to perform calculations in a global coordinate system.
 To avoid duplication of work, shape function evaluations may be performed
 once on a reference cell 
\begin_inset Formula $\hat{\Omega}$
\end_inset

 and then transformed back into the corresponding physical cell 
\begin_inset Formula $\Omega_{e}$
\end_inset

 as needed.
\end_layout

\begin_layout Standard
To compute integrals of 
\begin_inset Formula $F$
\end_inset

 in a reference coordinate system, we need to apply a change of variables:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\int_{\Omega_{e}}\ F(\vec{x})\ d\vec{x}=\int_{\hat{\Omega}}\ F(\vec{x}_{e}(\vec{\xi}))J_{e}(\vec{\xi})\ d\vec{\xi}\]

\end_inset

where 
\color none
the additional factor 
\begin_inset Formula $J_{e}(\vec{\xi})=\det\left[\frac{d\vec{x}_{e}}{d\vec{\xi}}\right]$
\end_inset

 is the Jacobian determinant of the reference map 
\begin_inset Formula $\vec{x}_{e}(\vec{\xi}):\hat{\Omega}\to\Omega_{e}$
\end_inset

.
 This map describes how the physical points 
\begin_inset Formula $\vec{x}\in\Omega_{e}$
\end_inset

 are transformed from the reference points 
\begin_inset Formula $\vec{\xi}\in\hat{\Omega}$
\end_inset

.
 Put another way, the inverse reference map 
\color inherit

\begin_inset Formula $\vec{\xi}=\vec{x}_{e}^{-1}(\vec{x})$
\end_inset

 tells us how the physical domain 
\begin_inset Formula $\Omega_{e}$
\end_inset

 maps into the reference cell 
\begin_inset Formula $\hat{\Omega}$
\end_inset

.
\end_layout

\begin_layout Standard
At this point, we can assume without loss of generality that every physical
 cell 
\begin_inset Formula $\Omega_{e}$
\end_inset

 can be derived from a single reference cell 
\begin_inset Formula $\hat{\Omega}$
\end_inset

, so that our quadrature rule becomes simply a set of weights 
\begin_inset Formula $w_{1},\ldots,w_{n_{Q}}$
\end_inset

 and points 
\begin_inset Formula $\vec{\xi}_{1},\ldots,\vec{\xi}_{n_{Q}}$
\end_inset

 over 
\begin_inset Formula $\hat{\Omega}$
\end_inset

.
 After changing variables, we end up with the final form of the quadrature
 rule that we can use to integrate the global residual field:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\int_{\hat{\Omega}}\ F(\vec{x}_{e}(\vec{\xi}))J_{e}(\vec{\xi})\ d\vec{\xi}=\sum_{q=1}^{n_{Q}}w_{q}F(\vec{x}_{e}(\vec{\xi}_{q}))J_{e}(\vec{\xi}_{q})\]

\end_inset


\end_layout

\begin_layout Standard
If we let 
\begin_inset Formula $F(\vec{x})=||u(\vec{x})-v(\vec{x})||^{2}$
\end_inset

 in the above expression, we can find the cell residual contribution over
 
\begin_inset Formula $\Omega_{e}$
\end_inset

 from
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{eqnarray*}
\varepsilon_{e}^{2} & = & \int_{\Omega_{e}}\ ||u(\vec{x})-v(\vec{x})||^{2}\ d\vec{x}\\
 & = & \int_{\hat{\Omega}}\ ||u(\vec{x}_{e}(\vec{\xi}))-v(\vec{x}_{e}(\vec{\xi}))||^{2}J_{e}(\vec{\xi})\ d\vec{\xi}\\
 & = & \sum_{q=1}^{\mathrm{n_{Q}}}w_{q}||u(\vec{x}_{e}(\vec{\xi}_{q}))-v(\vec{x}_{e}(\vec{\xi}_{q}))||^{2}J_{e}(\vec{\xi}_{q})\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
The global error 
\begin_inset Formula $\varepsilon=\sqrt{\sum_{e}\varepsilon_{e}^{2}}$
\end_inset

 is then approximated by the expression
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "100text%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Standard
\begin_inset Formula \begin{eqnarray*}
\varepsilon & = & \sqrt{\sum_{e=1}^{\mathrm{n_{el}}}\sum_{q=1}^{\mathrm{n_{Q}}}w_{q}||u(\vec{x}_{e}(\vec{\xi}_{q}))-v(\vec{x}_{e}(\vec{\xi}_{q}))||^{2}J_{e}(\vec{\xi}_{q})}\end{eqnarray*}

\end_inset


\end_layout

\end_inset


\newline

\end_layout

\begin_layout Standard
We can make a number of observations based on our final expression for the
 global error.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this section we show the formula used by Cigma to compute the 
\begin_inset Formula $L_{2}$
\end_inset

 norm of the residual field 
\begin_inset Formula $\rho$
\end_inset

.
\end_layout

\begin_layout Standard
Suppose the domain 
\begin_inset Formula $\Omega$
\end_inset

 into an appropriate set of cells 
\begin_inset Formula $\Omega_{1},\Omega_{2},\ldots,\Omega_{n_{el}}$
\end_inset

, we can compute the global error 
\begin_inset Formula $\varepsilon^{2}$
\end_inset

 as a sum over localized cell contributions, 
\begin_inset Formula $\varepsilon^{2}=\sum_{e}\varepsilon_{e}^{2}$
\end_inset

, where each cell residual 
\begin_inset Formula $\varepsilon_{e}^{2}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{eqnarray*}
\varepsilon_{e}^{2} & = & \int_{\Omega_{e}}||u(\vec{x})-v(\vec{x})||^{2}d\vec{x}\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
In general, we won't be able to integrate each cell residual 
\begin_inset Formula $\varepsilon_{e}^{2}$
\end_inset

 exactly since either of the functions 
\begin_inset Formula $u$
\end_inset

 and 
\begin_inset Formula $v$
\end_inset

 may have an incompatible representation relative to the finite element
 space on each domain 
\begin_inset Formula $\Omega_{e}$
\end_inset

.
 However, we can still calculate an approximation of each cell residual
 by applying an appropriate quadrature rule with a tolerable truncation
 error 
\begin_inset LatexCommand cite
key "Encyclopaedia of Cubature Formulas 2005"

\end_inset

.
 
\end_layout

\begin_layout Standard
To obtain an approximation to the integral of a function 
\begin_inset Formula $F(\vec{x})$
\end_inset

 over a cell 
\begin_inset Formula $\Omega_{e}$
\end_inset

, we simply apply the quadrature rule with weights 
\begin_inset Formula $w_{e,1},w_{e,2},\ldots,w_{e,n_{Q}}$
\end_inset

 and integration points 
\begin_inset Formula $\vec{x}_{e,1},\vec{x}_{e,2},\ldots,\vec{x}_{e,n_{Q}}$
\end_inset

 appropriate for the physical element 
\begin_inset Formula $\Omega_{e}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\int_{\Omega_{e}}\ F(\vec{x})\ d\vec{x}=\sum_{q=1}^{n_{Q}}w_{e,q}F(\vec{x}_{e,q})\]

\end_inset


\end_layout

\begin_layout Standard
Applying this quadrature rule directly over the entire physical domain 
\begin_inset Formula $\Omega=\cup\Omega_{e}$
\end_inset

 gives us 
\begin_inset Formula \[
\int_{\Omega}\ F(\vec{x})\ d\vec{x}=\sum_{e=1}^{n_{el}}\sum_{q=1}^{n_{Q}}w_{e,q}F(\vec{x}_{e,q})\]

\end_inset


\end_layout

\begin_layout Standard
For efficiency reasons, it is undesirable in finite element applications
 to perform calculations in a global coordinate system.
 To avoid duplication of work, shape function evaluations may be performed
 once on a reference cell 
\begin_inset Formula $\hat{\Omega}$
\end_inset

 and then transformed back into the corresponding physical cell 
\begin_inset Formula $\Omega_{e}$
\end_inset

 as needed.
\end_layout

\begin_layout Standard
To compute integrals of 
\begin_inset Formula $F$
\end_inset

 in a reference coordinate system, we need to apply a change of variables:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\int_{\Omega_{e}}\ F(\vec{x})\ d\vec{x}=\int_{\hat{\Omega}}\ F(\vec{x}_{e}(\vec{\xi}))J_{e}(\vec{\xi})\ d\vec{\xi}\]

\end_inset

where 
\color none
the additional factor 
\begin_inset Formula $J_{e}(\vec{\xi})=\det\left[\frac{d\vec{x}_{e}}{d\vec{\xi}}\right]$
\end_inset

 is the Jacobian determinant of the reference map 
\begin_inset Formula $\vec{x}_{e}(\vec{\xi}):\hat{\Omega}\to\Omega_{e}$
\end_inset

.
 This map describes how the physical points 
\begin_inset Formula $\vec{x}\in\Omega_{e}$
\end_inset

 are transformed from the reference points 
\begin_inset Formula $\vec{\xi}\in\hat{\Omega}$
\end_inset

.
 Put another way, the inverse reference map 
\color inherit

\begin_inset Formula $\vec{\xi}=\vec{x}_{e}^{-1}(\vec{x})$
\end_inset

 tells us how the physical domain 
\begin_inset Formula $\Omega_{e}$
\end_inset

 maps into the reference cell 
\begin_inset Formula $\hat{\Omega}$
\end_inset

.
\end_layout

\begin_layout Standard
At this point, we can assume without loss of generality that every physical
 cell 
\begin_inset Formula $\Omega_{e}$
\end_inset

 can be derived from a single reference cell 
\begin_inset Formula $\hat{\Omega}$
\end_inset

, so that our quadrature rule becomes simply a set of weights 
\begin_inset Formula $w_{1},\ldots,w_{n_{Q}}$
\end_inset

 and points 
\begin_inset Formula $\vec{\xi}_{1},\ldots,\vec{\xi}_{n_{Q}}$
\end_inset

 over 
\begin_inset Formula $\hat{\Omega}$
\end_inset

.
 After changing variables, we end up with the final form of the quadrature
 rule that we can use to integrate the global residual field:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\int_{\hat{\Omega}}\ F(\vec{x}_{e}(\vec{\xi}))J_{e}(\vec{\xi})\ d\vec{\xi}=\sum_{q=1}^{n_{Q}}w_{q}F(\vec{x}_{e}(\vec{\xi}_{q}))J_{e}(\vec{\xi}_{q})\]

\end_inset


\end_layout

\begin_layout Standard
If we let 
\begin_inset Formula $F(\vec{x})=||u(\vec{x})-v(\vec{x})||^{2}$
\end_inset

 in the above expression, we can find the cell residual contribution over
 
\begin_inset Formula $\Omega_{e}$
\end_inset

 from
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{eqnarray*}
\varepsilon_{e}^{2} & = & \int_{\Omega_{e}}\ ||u(\vec{x})-v(\vec{x})||^{2}\ d\vec{x}\\
 & = & \int_{\hat{\Omega}}\ ||u(\vec{x}_{e}(\vec{\xi}))-v(\vec{x}_{e}(\vec{\xi}))||^{2}J_{e}(\vec{\xi})\ d\vec{\xi}\\
 & = & \sum_{q=1}^{\mathrm{n_{Q}}}w_{q}||u(\vec{x}_{e}(\vec{\xi}_{q}))-v(\vec{x}_{e}(\vec{\xi}_{q}))||^{2}J_{e}(\vec{\xi}_{q})\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
The global error 
\begin_inset Formula $\varepsilon=\sqrt{\sum_{e}\varepsilon_{e}^{2}}$
\end_inset

 is then approximated by the expression
\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "100text%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Standard
\begin_inset Formula \begin{eqnarray*}
\varepsilon & = & \sqrt{\sum_{e=1}^{\mathrm{n_{el}}}\sum_{q=1}^{\mathrm{n_{Q}}}w_{q}||u(\vec{x}_{e}(\vec{\xi}_{q}))-v(\vec{x}_{e}(\vec{\xi}_{q}))||^{2}J_{e}(\vec{\xi}_{q})}\end{eqnarray*}

\end_inset


\end_layout

\end_inset


\newline
We use this final form to calculate the global and localized errors on arbitrary
 discretizations.
\end_layout

\begin_layout Section
Comparing Residuals
\end_layout

\begin_layout Standard
For comparing errors of different solutions, you can normalize the global
 error by the norm of the exact solution.
 For a family of solutions 
\begin_inset Formula $u_{h}(\vec{x})$
\end_inset

, parametrized by the the maximum element size 
\begin_inset Formula $h$
\end_inset

 of the underlying discretization, and an exact solution 
\begin_inset Formula $u(\vec{x})$
\end_inset

, this normalized error is given by
\end_layout

\begin_layout Standard
\begin_inset Formula \begin{eqnarray*}
\varepsilon_{rel} & = & \frac{||u-u_{h}||_{L_{2}}}{||u||_{L_{2}}}\\
 & = & \frac{\int_{\Omega}||u(\vec{x})-u_{h}(\vec{x})||^{2}d\vec{x}}{\int_{\Omega}||u(\vec{x})||^{2}d\vec{x}}\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
This normalized error can be interpreted as the average error in the physical
 quantity being evaluated, so that a value of 0.01 corresponds to a 1% averaged
 error.
\end_layout

\begin_layout Standard
Even if the exact solution is not currently known, this normalized error
 may be used to test the accuracy between two or more numerical solutions,
 defined on successively refined meshes.
\end_layout

\begin_layout Section
Convergence Rates
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Standard
TODO: Move discussion of convergence from old running.lyx into this section.
\end_layout

\begin_layout Standard
Standard error estimate (Hughes, pg 190; Johnson, pg 97)
\end_layout

\begin_layout Standard
Give formula for 
\begin_inset Formula $\alpha$
\end_inset

 for when we know the exact solution (only need two levels), and we are
 testing our numerical code.
\end_layout

\begin_layout Standard
Give formula for 
\begin_inset Formula $\alpha$
\end_inset

 for when we have three levels (same formula), and we are testing our code
 for convergence.
\end_layout

\begin_layout Standard
Talk about least squares fit for when we have more than three levels.
 (mention scipy script, and reproduce it here, since it's short)
\end_layout

\begin_layout Standard
SciPy script for optimizing least squares fit into the formula y = a*x^b
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Even if the exact solution 
\begin_inset Formula $u(\vec{x})$
\end_inset

 is not known, but we have calculated a family of solutions 
\begin_inset Formula $u_{h}(\vec{x})$
\end_inset

 on discrete meshes, we may calculate a convergence rate by using the standard
 error estimate 
\begin_inset Formula $||u-u_{h}||_{p}\leq Ch^{\alpha},$
\end_inset

where 
\begin_inset Formula $C$
\end_inset

 is independent of both 
\begin_inset Formula $h$
\end_inset

 and 
\begin_inset Formula $u$
\end_inset

.
 This error bound holds problems
\end_layout

\begin_layout Section
Uses in Benchmarking
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
Here we define what we mean by Benchmark, and how we can use.
\end_layout

\begin_layout Standard
Give URLs for benchmark repositories on CIG svn tree.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we saw in Section 3.5, it is easier to calculate the convergence rate
 on a sequence of meshes if we have access to the exact solution.
 
\begin_inset Note Note
status open

\begin_layout Standard
Since one of our goals is to provide an easy means of calculating these
 comparisons,
\end_layout

\end_inset


\end_layout

\end_body
\end_document
