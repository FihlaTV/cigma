#LyX 1.5.5 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass book
\begin_preamble
\newcommand{\mynote}[1]{}
\end_preamble
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
mynote{
\end_layout

\begin_layout Standard

TODO:
\end_layout

\begin_layout Standard

  * Move discussion from error_analysis.lyx and running.lyx here (done)
\end_layout

\begin_layout Standard

  * Rename document to interpolation.lyx (done)
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

Note that we place the interpolation chapter before the integration chapter
 because we wish to define the isoparametric elements in here (interpolation.lyx)
, and simply refer back to them in integration.lyx (for listing the integration
 rules)
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

Random Notes: 
\end_layout

\begin_layout Standard

For parametrizing the predefined functions we would need to use boost::regex
 when initializing the function from a user specified source string
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

Give list of predefined functions here
\end_layout

\begin_layout Standard

  - basic:
\end_layout

\begin_layout Standard

     * zero
\end_layout

\begin_layout Standard

     * scalar.one
\end_layout

\begin_layout Standard

  - benchmarks:
\end_layout

\begin_layout Standard

     * strikeslip.okada.disloc3d
\end_layout

\begin_layout Standard

     * cylinder_extension.{maxwell,non_newtonian}.{displacement,velocity,stress}
\end_layout

\begin_layout Standard

     * cylinder_relaxation.{maxwell,non_newtonian}.{displacement,velocity,stress}
\end_layout

\begin_layout Standard

     * circular_inclusion.pressure
\end_layout

\begin_layout Standard

     * test.{cube,sphere,square,circle}
\end_layout

\begin_layout Standard

  - Explain what is needed to define own function
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

Important things to discuss:
\end_layout

\begin_layout Standard

  - Natural coordinates
\end_layout

\begin_layout Standard

  - Restricting discussion to isoparametric elements
\end_layout

\begin_layout Standard

  - Available elements: tet4, tet10, hex8, hex20, hex27, tri3, quad4
\end_layout

\begin_layout Standard

  - Node orderings for each element type (use figures to illustrate)
\end_layout

\begin_layout Standard

  - Shape functions
\end_layout

\begin_layout Standard

  - Shape function derivatives
\end_layout

\begin_layout Standard

  - Calculation of Jacobian
\end_layout

\begin_layout Standard

  - Calculation of Volumes
\end_layout

\begin_layout Standard

  - Deciding if a given point is contained in element
\end_layout

\begin_layout Standard

  - Default integration rule for each element type
\end_layout

\begin_layout Standard

  - Mesh Locator for finding element given an arbitrary point -- returns
 list of likely elements
\end_layout

\begin_layout Standard

  - Deciding if a given global point is contained in element (need inverse
 reference map)
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Interpolation Functions
\end_layout

\begin_layout Standard
Because we wish to integrate 
\end_layout

\begin_layout Section
Local Functions
\end_layout

\begin_layout Standard
Defined locally over a discretization of the domain of interest.
 Over each discretization element, we define a local coordinate system.
 Since the integration points are defined on a global coordinate system,
 we might have to invert the appropriate reference map after running a search
 through each discretization cell, followed by a newton-iteration to convert
 into the local coordinates, followed by an interior test.
\end_layout

\begin_layout Subsection
Domain Discretization
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Standard
Definition of mesh here
\end_layout

\end_inset


\end_layout

\begin_layout Standard
A typical discretization will partition the domain of interest into a large
 number of cells.
 
\end_layout

\begin_layout Standard
A set of cells which partition the domain.
 These cells are defined geometrically by a number of node points, which
 together with a set of connectivity rules.
 This set of node points will have a number of degrees of freedom associated
 with them.
 An interpolation function can be.
\end_layout

\begin_layout Subsection
Interpolation Step
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
Shape functions.
 Interpolant function.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Once we arrive at a solution on a cell 
\begin_inset Formula $\Omega_{e}$
\end_inset

, we can define an interpolant function that will give us
\end_layout

\begin_layout Subsection
Available Elements
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
Reference domain.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tetrahedra
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
Reference domain.
 Shape functions.
 Jacobian determinant and volume.
 Interior test.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Hexahedron
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
Reference cell.
 Shape functions.
 Jacobian determinant & volume.
 Interior test.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Global Functions
\end_layout

\begin_layout Standard
These functions are given explicitly on a domain.
 They may be defined explicitly, in the source code, or may also be defined
 by a global set of basis functions (such as spherical harmonics).
\end_layout

\begin_layout Subsection
Available Global Functions
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mynote{
\end_layout

\begin_layout Standard

TODO: do we really need to compile every function?
\end_layout

\begin_layout Standard

If the number of functions becomes unwieldy, maybe this should become a
 configure-time option.
\end_layout

\begin_layout Standard

For example: we could configure cigma with the following flags:
\end_layout

\begin_layout Standard

    --with-all-functions=yes, --with-gale-functions=no, --with-test-functions,
 --with-foo-functions, etc..
\end_layout

\begin_layout Standard

TODO: add more to the description of each function
\end_layout

\begin_layout Standard

}
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Standard
TODO: Is there a way to get rid of the internal horizontal rules in the
 second column of a table?
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="18" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
zero
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
scalar.one
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
strikeslip.disloc3d.displacement
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Strike-slip benchmark calculation with Okada disloc3d routine
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
strikeslip.disloc3d.velocity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
strikeslip.disloc3d.stress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cylinder_ext.maxwell_mat.displacement
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Extension of Cylinder
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cylinder_ext.maxwell_mat.velocity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cylinder_ext.maxwell_mat.stress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cylinder_ext.non_newt_mat.displacement
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Extending a cylinder with a non-newtonian material
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cylinder_ext.non_newt_mat.velocity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cylinder_ext.non_newt_mat.stress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cylinder_rel.maxwell_mat.displacement
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Gravity relaxation of 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cylinder_rel.maxwell_mat.velocity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cylinder_rel.maxwell_mat.stress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cylinder_rel.non_newt_mat.displacement
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cylinder_rel.non_newt_mat.velocity
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
cylinder_rel.non_newt_mat.stress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
By default, we compile a number of functions into Cigma.
 We subdivide these into three categories.
 The first class contains only two functions, zero and one, with special
 initialization rules.
 The second class of functions consists of test functions intended to verify
 the operation of Cigma.
 Finally, the third class of functions consists of example benchmark cases
 that you may use to define your own.
\newline

\newline
There are two basic functions that are
 available, listed in the table below.
 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="2">
<features>
<column alignment="left" valignment="top" leftline="true" rightline="true" width="0">
<column alignment="left" valignment="top" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
zero
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Always evaluates to 0.
 Compatible with scalar, vector, and tensor functions.
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
one
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Always evaluates to 1.
 Only compatible with scalar functions.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\newline

\newline
The following functions have short definitions and are available for internal
 testing purposes.
 Mainly, these are used to make sure Cigma returns consistent results 
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features>
<column alignment="left" valignment="top" leftline="true" width="0">
<column alignment="left" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
test.cube
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Scalar field in 3-dimensions
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
test.sphere
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Vector field in 3-dimensions
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
test.square
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Scalar field in 2-dimensions
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
test.circle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Vector field in 2-dimensions
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\newline

\newline
Cylinder extension case (maxwell and non-newtonian materials)
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="1">
<features>
<column alignment="left" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cylinder_ext.maxwell_mat.displacement
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cylinder_ext.maxwell_mat.velocity
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cylinder_ext.maxwell_mat.stress
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cylinder_ext.non_newt_mat.displacement
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cylinder_ext.non_newt_mat.velocity
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cylinder_ext.non_newt_mat.stress
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\newline

\newline
Cylinder relaxation case (maxwell and non-newtonian materials)
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="1">
<features>
<column alignment="left" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cylinder_rel.maxwell_mat.displacement
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cylinder_rel.maxwell_mat.velocity
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cylinder_rel.maxwell_mat.stress
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cylinder_rel.non_newt_mat.displacement
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cylinder_rel.non_newt_mat.velocity
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
cylinder_rel.non_newt_mat.stress
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\newline

\newline
Using Gale, we may compute various
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features>
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
circular_inclusion.pressure
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\newline

\newline
We can also calculate the initial step of the strike-slip benchmark (no
 gravity) discussed in Chapter 8.
 This is based on the Okada (1992) dislocation code.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="1">
<features>
<column alignment="left" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
strikeslip.disloc3d.displacement
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
strikeslip.disloc3d.velocity
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family typewriter
strikeslip.disloc3d.stress
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\newline

\newline

\end_layout

\begin_layout Subsection
Defining Your Own Global Function
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Standard
Show example subclass of cigma::Function.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
There are three things you need to do in order to register a new function.
 These are the steps you need to follow in order to let Cigma know about
 your function.
\end_layout

\begin_layout Enumerate
Drop the definition of your global function in a subdirectory of the 
\family typewriter
src/core/functions/
\family default
 directory, and define an appropriate subclass of 
\family typewriter
cigma::Function
\family default
 which interfaces to your definition.
\end_layout

\begin_layout Enumerate
Add any new source and header files into the 
\family typewriter
libcigma_a_SOURCES
\family default
 variable in 
\family typewriter
src/Makefile.am
\family default
, following the examples given in the section that refers to the 
\family typewriter
Zero.h
\family default
 and 
\family typewriter
Zero.cpp
\family default
 files.
\end_layout

\begin_layout Enumerate
Instantiate your function and insert it into the appropriate map object
 in src/core/functions/FunctionRegistry.cpp, again following the examples
 already in the file.
\end_layout

\begin_layout Standard
XXX: copy example src/core/functions/Test.cpp::TestCube here
\end_layout

\end_body
\end_document
