#LyX 1.6.0 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass book
\begin_preamble
\newcommand{\mynote}[1]{}
\end_preamble
\use_default_options false
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "cha:Running-Cigma"

\end_inset

Running Cigma
\end_layout

\begin_layout Standard
As mentioned in the first chapter, Cigma is primarily designed for calculating
 error estimates between arbitrary functions.
 Therefore its primary usage revolves around the following operation
\end_layout

\begin_layout LyX-Code
$ 
\series bold
cigma compare 
\emph on
\bar under
FunctionA
\emph default
\bar default
 
\emph on
\bar under
FunctionB
\emph default
\bar default
 -o residuals.vtk
\end_layout

\begin_layout Standard
In general, you will provide two paths pointing to the location of the data
 describing the two functions you wish to compare, although in special cases
 you will be able to refer to specific functions by name instead.
\end_layout

\begin_layout Standard
You may also need to provide further information by using additional command
 line options.
 For example, you may want to use a different domain discretization for
 the numerical integration step.
 or you may need to increase the order of the quadrature rule in order to
 improve accuracy of the integration.
\end_layout

\begin_layout Section
Data Paths
\end_layout

\begin_layout Standard
In Chapter 6, we described the layout used in the various file formats.
 To refer to a particular array on the command line you can use the string
 
\series bold
A:B
\series default
, to refer to stored in a file 
\series bold
A
\series default
, you can refer to a particular named array 
\series bold
B
\series default
 by using the string 
\series bold
A:B
\series default
, with the colon character `:' serving as a separator between the two paths.
\end_layout

\begin_layout Section
Command Line Interface
\end_layout

\begin_layout Subsection
Comparing Two Finite Element Fields
\end_layout

\begin_layout Standard
Comparing two arbitrary finite element fields can be accomplished with the
 
\family typewriter
cigma compare
\family default
 command-line utility.
 By default, the comparison will involve a numerical integration over each
 of the elements in the mesh associated with the first field.
 If this discretization is inadequate, you may also specify an alternative
 discretization over which to perform the integration.
 The comparison operation will output the local residual values are into
 the specified output file.
\end_layout

\begin_layout Standard
A basic comparison can be as simple as specifying the following arguments:
\end_layout

\begin_layout LyX-Code
cigma compare --first=field1.h5:/field1/stepN
\end_layout

\begin_layout LyX-Code

\series bold
 
\series default
             --second=field2.h5:/field2/stepN
\end_layout

\begin_layout LyX-Code
              --output=residuals.vtk
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Subsection
Comparing against Known Values
\end_layout

\begin_layout Standard
A finite element description might not always be available for one of the
 fields.
 However, you can break the comparison into several steps if you have a
 means to compute that field on any of the required points.
\end_layout

\begin_layout Standard
First, extract the global coordinates of the integration points.
 This will result in an explicit list of points over which to evaluate your
 field.
\end_layout

\begin_layout LyX-Code
cigma extract field1.h5:/model/mesh/ -o points.h5:/projected_points
\end_layout

\begin_layout Standard
Now you can evaluate your function at the designated points.
 You can provide the path to the explicit set of values with
\end_layout

\begin_layout LyX-Code
cigma compare --first=field1.h5:/field1/stepN
\end_layout

\begin_layout LyX-Code
              --second-points=points.h5:/projected_points
\end_layout

\begin_layout LyX-Code
              --second-values=values.h5:/projected_values
\end_layout

\begin_layout LyX-Code
              --output=residuals.vtk
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Comparing-against-a"

\end_inset

Comparing against a Known Function
\end_layout

\begin_layout Standard
If one of your fields is easily described by an analytic expression, then
 you also have the option to compile your analytic function as a builtin
 Cigma function.
 This will enable you to reference your function by name when using the
 
\family typewriter
compare
\family default
 command.
 For example,
\end_layout

\begin_layout LyX-Code
cigma compare --first=field1.h5:/vars/displacement/step0
\end_layout

\begin_layout LyX-Code

\series bold
 
\series default
             --second=
\bar under
disloc3d
\end_layout

\begin_layout LyX-Code
              --output=residuals.vtk
\end_layout

\begin_layout Standard
You may also interact with your analytic function by using the 
\family typewriter
cigma
\family default
 
\family typewriter
eval
\family default
 command, and obtain a set of values which may then be passed back to the
 
\family typewriter
compare
\family default
 command.
 
\end_layout

\begin_layout LyX-Code
cigma eval --function=
\bar under
disloc3d
\end_layout

\begin_layout LyX-Code
           --points=points.h5:/projected_points
\end_layout

\begin_layout LyX-Code
           --values=values.h5:/disloc3d_values
\end_layout

\begin_layout Standard
Once these values have been obtained, we can use it to resume the calculation
 of 
\end_layout

\begin_layout LyX-Code
cigma compare --output=residuals.vtk
\end_layout

\begin_layout LyX-Code
              --first=field1.h5:/vars/displacement/step0
\end_layout

\begin_layout LyX-Code
              --second-points=points.h5:/projected_points
\end_layout

\begin_layout LyX-Code
              --second-values=values.h5:/disloc3d_values
\end_layout

\begin_layout Standard
Another built-in function you might find useful is the 
\family typewriter
\bar under
zero
\family default
\bar default
 function, which is defined to return 0 everywhere.
 You can use this function for estimating the norm of your field.
\end_layout

\begin_layout Subsection
Specifying a Integration Mesh
\end_layout

\begin_layout Standard
To override the mesh used in the integration, you can specify an extra argument
 providing the location of the mesh,
\end_layout

\begin_layout LyX-Code
cigma compare [...]
\end_layout

\begin_layout LyX-Code
  --quadrature-mesh=mesh.h5:/model/mesh/
\end_layout

\begin_layout Standard
Alternatively, you can also specify the coordinates and connectivity arrays
 separately, in case they reside in separate files.
\end_layout

\begin_layout LyX-Code
cigma compare [...]
\end_layout

\begin_layout LyX-Code
  --quadrature-mesh-coordinates=file1.h5:/model/mesh/coordinates
\end_layout

\begin_layout LyX-Code
  --quadrature-mesh-connectivity=file2.h5:/model/mesh/connectivity
\end_layout

\begin_layout Subsection
Specifying a Quadrature Rule
\end_layout

\begin_layout Standard
To specify a quadrature rule, you will have to provide the quadrature weights
 and points in the appropriate reference element.
 This can be done with the following additional argument:
\end_layout

\begin_layout LyX-Code
cigma compare [...]
\end_layout

\begin_layout LyX-Code
  --quadrature-rule=quadrature-rules.h5:/path/to/rule
\end_layout

\begin_layout Standard
You may also specify the location of the points and weights separately:
\end_layout

\begin_layout LyX-Code
cigma compare [...]
\end_layout

\begin_layout LyX-Code
  --quadrature-rule-points=file.h5:/path/to/rule/points
\end_layout

\begin_layout LyX-Code
  --quadrature-rule-weights=file.h5:/path/to/rule/weights
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
In the 
\family typewriter
src/
\family default
 directory of the Cigma distribution, you can find a Python script called
 
\family typewriter
rules.py
\family default
 that uses FIAT for calculating an appropriate set of quadrature rules for
 use in Cigma.
\end_layout

\end_body
\end_document
